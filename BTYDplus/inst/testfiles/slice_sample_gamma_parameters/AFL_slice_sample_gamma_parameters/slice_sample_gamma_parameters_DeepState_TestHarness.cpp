// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// slice_sample_gamma_parameters_DeepState_TestHarness_generation.cpp and slice_sample_gamma_parameters_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector slice_sample_gamma_parameters(NumericVector data, NumericVector init, NumericVector hyper, double steps, double w);

TEST(,){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector data  = RcppDeepState_NumericVector();
  std::string data_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BTYDplus/inst/testfiles/slice_sample_gamma_parameters/AFL_slice_sample_gamma_parameters/afl_inputs/" + std::to_string(t) + "_data.qs";
  qs::c_qsave(data,data_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "data values: "<< data << std::endl;
  NumericVector init  = RcppDeepState_NumericVector();
  std::string init_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BTYDplus/inst/testfiles/slice_sample_gamma_parameters/AFL_slice_sample_gamma_parameters/afl_inputs/" + std::to_string(t) + "_init.qs";
  qs::c_qsave(init,init_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "init values: "<< init << std::endl;
  NumericVector hyper  = RcppDeepState_NumericVector();
  std::string hyper_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BTYDplus/inst/testfiles/slice_sample_gamma_parameters/AFL_slice_sample_gamma_parameters/afl_inputs/" + std::to_string(t) + "_hyper.qs";
  qs::c_qsave(hyper,hyper_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "hyper values: "<< hyper << std::endl;
  NumericVector steps(1);
  steps[0]  = RcppDeepState_double();
  std::string steps_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BTYDplus/inst/testfiles/slice_sample_gamma_parameters/AFL_slice_sample_gamma_parameters/afl_inputs/" + std::to_string(t) + "_steps.qs";
  qs::c_qsave(steps,steps_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "steps values: "<< steps << std::endl;
  NumericVector w(1);
  w[0]  = RcppDeepState_double();
  std::string w_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BTYDplus/inst/testfiles/slice_sample_gamma_parameters/AFL_slice_sample_gamma_parameters/afl_inputs/" + std::to_string(t) + "_w.qs";
  qs::c_qsave(w,w_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "w values: "<< w << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    slice_sample_gamma_parameters(data,init,hyper,steps[0],w[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
