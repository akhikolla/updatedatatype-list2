// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// LBSPRgen_DeepState_TestHarness_generation.cpp and LBSPRgen_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List LBSPRgen(double SL50, double SL95, double FM, int nage, int nlen, double CVLinf, NumericVector LenBins, NumericVector LenMids, double MK, double Linf, NumericVector rLens, NumericMatrix Prob, NumericVector Ml, double L50, double L95, double Beta);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector SL50(1);
  SL50[0]  = RcppDeepState_double();
  qs::c_qsave(SL50,"/home/akhila/fuzzer_packages/fuzzedpackages/DLMtool/inst/testfiles/LBSPRgen/inputs/SL50.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "SL50 values: "<< SL50 << std::endl;
  NumericVector SL95(1);
  SL95[0]  = RcppDeepState_double();
  qs::c_qsave(SL95,"/home/akhila/fuzzer_packages/fuzzedpackages/DLMtool/inst/testfiles/LBSPRgen/inputs/SL95.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "SL95 values: "<< SL95 << std::endl;
  NumericVector FM(1);
  FM[0]  = RcppDeepState_double();
  qs::c_qsave(FM,"/home/akhila/fuzzer_packages/fuzzedpackages/DLMtool/inst/testfiles/LBSPRgen/inputs/FM.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "FM values: "<< FM << std::endl;
  IntegerVector nage(1);
  nage[0]  = RcppDeepState_int();
  qs::c_qsave(nage,"/home/akhila/fuzzer_packages/fuzzedpackages/DLMtool/inst/testfiles/LBSPRgen/inputs/nage.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nage values: "<< nage << std::endl;
  IntegerVector nlen(1);
  nlen[0]  = RcppDeepState_int();
  qs::c_qsave(nlen,"/home/akhila/fuzzer_packages/fuzzedpackages/DLMtool/inst/testfiles/LBSPRgen/inputs/nlen.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nlen values: "<< nlen << std::endl;
  NumericVector CVLinf(1);
  CVLinf[0]  = RcppDeepState_double();
  qs::c_qsave(CVLinf,"/home/akhila/fuzzer_packages/fuzzedpackages/DLMtool/inst/testfiles/LBSPRgen/inputs/CVLinf.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "CVLinf values: "<< CVLinf << std::endl;
  NumericVector LenBins  = RcppDeepState_NumericVector();
  qs::c_qsave(LenBins,"/home/akhila/fuzzer_packages/fuzzedpackages/DLMtool/inst/testfiles/LBSPRgen/inputs/LenBins.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "LenBins values: "<< LenBins << std::endl;
  NumericVector LenMids  = RcppDeepState_NumericVector();
  qs::c_qsave(LenMids,"/home/akhila/fuzzer_packages/fuzzedpackages/DLMtool/inst/testfiles/LBSPRgen/inputs/LenMids.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "LenMids values: "<< LenMids << std::endl;
  NumericVector MK(1);
  MK[0]  = RcppDeepState_double();
  qs::c_qsave(MK,"/home/akhila/fuzzer_packages/fuzzedpackages/DLMtool/inst/testfiles/LBSPRgen/inputs/MK.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "MK values: "<< MK << std::endl;
  NumericVector Linf(1);
  Linf[0]  = RcppDeepState_double();
  qs::c_qsave(Linf,"/home/akhila/fuzzer_packages/fuzzedpackages/DLMtool/inst/testfiles/LBSPRgen/inputs/Linf.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Linf values: "<< Linf << std::endl;
  NumericVector rLens  = RcppDeepState_NumericVector();
  qs::c_qsave(rLens,"/home/akhila/fuzzer_packages/fuzzedpackages/DLMtool/inst/testfiles/LBSPRgen/inputs/rLens.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rLens values: "<< rLens << std::endl;
  NumericMatrix Prob  = RcppDeepState_NumericMatrix();
  qs::c_qsave(Prob,"/home/akhila/fuzzer_packages/fuzzedpackages/DLMtool/inst/testfiles/LBSPRgen/inputs/Prob.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Prob values: "<< Prob << std::endl;
  NumericVector Ml  = RcppDeepState_NumericVector();
  qs::c_qsave(Ml,"/home/akhila/fuzzer_packages/fuzzedpackages/DLMtool/inst/testfiles/LBSPRgen/inputs/Ml.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Ml values: "<< Ml << std::endl;
  NumericVector L50(1);
  L50[0]  = RcppDeepState_double();
  qs::c_qsave(L50,"/home/akhila/fuzzer_packages/fuzzedpackages/DLMtool/inst/testfiles/LBSPRgen/inputs/L50.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "L50 values: "<< L50 << std::endl;
  NumericVector L95(1);
  L95[0]  = RcppDeepState_double();
  qs::c_qsave(L95,"/home/akhila/fuzzer_packages/fuzzedpackages/DLMtool/inst/testfiles/LBSPRgen/inputs/L95.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "L95 values: "<< L95 << std::endl;
  NumericVector Beta(1);
  Beta[0]  = RcppDeepState_double();
  qs::c_qsave(Beta,"/home/akhila/fuzzer_packages/fuzzedpackages/DLMtool/inst/testfiles/LBSPRgen/inputs/Beta.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Beta values: "<< Beta << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    LBSPRgen(SL50[0],SL95[0],FM[0],nage[0],nlen[0],CVLinf[0],LenBins,LenMids,MK[0],Linf[0],rLens,Prob,Ml,L50[0],L95[0],Beta[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
