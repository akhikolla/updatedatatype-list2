// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cpp_find_all_descendents_DeepState_TestHarness_generation.cpp and cpp_find_all_descendents_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

std::vector<int> cpp_find_all_descendents(Rcpp::IntegerVector alpha, Rcpp::IntegerVector t_inf, Rcpp::IntegerVector cluster, int i);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector alpha  = RcppDeepState_IntegerVector();
  qs::c_qsave(alpha,"/home/akhila/fuzzer_packages/fuzzedpackages/o2geosocial/inst/testfiles/cpp_find_all_descendents/inputs/alpha.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alpha values: "<< alpha << std::endl;
  IntegerVector t_inf  = RcppDeepState_IntegerVector();
  qs::c_qsave(t_inf,"/home/akhila/fuzzer_packages/fuzzedpackages/o2geosocial/inst/testfiles/cpp_find_all_descendents/inputs/t_inf.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "t_inf values: "<< t_inf << std::endl;
  IntegerVector cluster  = RcppDeepState_IntegerVector();
  qs::c_qsave(cluster,"/home/akhila/fuzzer_packages/fuzzedpackages/o2geosocial/inst/testfiles/cpp_find_all_descendents/inputs/cluster.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "cluster values: "<< cluster << std::endl;
  IntegerVector i(1);
  i[0]  = RcppDeepState_int();
  qs::c_qsave(i,"/home/akhila/fuzzer_packages/fuzzedpackages/o2geosocial/inst/testfiles/cpp_find_all_descendents/inputs/i.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "i values: "<< i << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cpp_find_all_descendents(alpha,t_inf,cluster,i[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
