// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// calcHurdleExpKernel_DeepState_TestHarness_generation.cpp and calcHurdleExpKernel_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericMatrix calcHurdleExpKernel(const Rcpp::NumericMatrix& distMat, const double& rate, const double& p0);

TEST(,){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix distMat  = RcppDeepState_NumericMatrix();
  std::string distMat_t = "/home/akhila/fuzzer_packages/fuzzedpackages/MGDrivE/inst/testfiles/calcHurdleExpKernel/AFL_calcHurdleExpKernel/afl_inputs/" + std::to_string(t) + "_distMat.qs";
  qs::c_qsave(distMat,distMat_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "distMat values: "<< distMat << std::endl;
  NumericVector rate(1);
  rate[0]  = RcppDeepState_double();
  std::string rate_t = "/home/akhila/fuzzer_packages/fuzzedpackages/MGDrivE/inst/testfiles/calcHurdleExpKernel/AFL_calcHurdleExpKernel/afl_inputs/" + std::to_string(t) + "_rate.qs";
  qs::c_qsave(rate,rate_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rate values: "<< rate << std::endl;
  NumericVector p0(1);
  p0[0]  = RcppDeepState_double();
  std::string p0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/MGDrivE/inst/testfiles/calcHurdleExpKernel/AFL_calcHurdleExpKernel/afl_inputs/" + std::to_string(t) + "_p0.qs";
  qs::c_qsave(p0,p0_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "p0 values: "<< p0 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    calcHurdleExpKernel(distMat,rate[0],p0[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
