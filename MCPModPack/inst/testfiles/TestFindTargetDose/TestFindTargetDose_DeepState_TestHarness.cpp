// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// TestFindTargetDose_DeepState_TestHarness_generation.cpp and TestFindTargetDose_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double TestFindTargetDose(const double& delta, const int& model, const NumericVector& coef);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector delta(1);
  delta[0]  = RcppDeepState_double();
  qs::c_qsave(delta,"/home/akhila/fuzzer_packages/fuzzedpackages/MCPModPack/inst/testfiles/TestFindTargetDose/inputs/delta.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "delta values: "<< delta << std::endl;
  IntegerVector model(1);
  model[0]  = RcppDeepState_int();
  qs::c_qsave(model,"/home/akhila/fuzzer_packages/fuzzedpackages/MCPModPack/inst/testfiles/TestFindTargetDose/inputs/model.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "model values: "<< model << std::endl;
  NumericVector coef  = RcppDeepState_NumericVector();
  qs::c_qsave(coef,"/home/akhila/fuzzer_packages/fuzzedpackages/MCPModPack/inst/testfiles/TestFindTargetDose/inputs/coef.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "coef values: "<< coef << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    TestFindTargetDose(delta[0],model[0],coef);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
