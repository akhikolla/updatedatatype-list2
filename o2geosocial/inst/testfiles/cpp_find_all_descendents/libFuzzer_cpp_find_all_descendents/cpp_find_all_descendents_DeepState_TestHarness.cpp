// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cpp_find_all_descendents_DeepState_TestHarness_generation.cpp and cpp_find_all_descendents_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

std::vector<int> cpp_find_all_descendents(Rcpp::IntegerVector alpha, Rcpp::IntegerVector t_inf, Rcpp::IntegerVector cluster, int i);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector alpha  = RcppDeepState_IntegerVector();
  std::string alpha_t = "/home/akhila/fuzzer_packages/fuzzedpackages/o2geosocial/inst/testfiles/cpp_find_all_descendents/libFuzzer_cpp_find_all_descendents/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_alpha.qs";
  qs::c_qsave(alpha,alpha_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alpha values: "<< alpha << std::endl;
  IntegerVector t_inf  = RcppDeepState_IntegerVector();
  std::string t_inf_t = "/home/akhila/fuzzer_packages/fuzzedpackages/o2geosocial/inst/testfiles/cpp_find_all_descendents/libFuzzer_cpp_find_all_descendents/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_t_inf.qs";
  qs::c_qsave(t_inf,t_inf_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "t_inf values: "<< t_inf << std::endl;
  IntegerVector cluster  = RcppDeepState_IntegerVector();
  std::string cluster_t = "/home/akhila/fuzzer_packages/fuzzedpackages/o2geosocial/inst/testfiles/cpp_find_all_descendents/libFuzzer_cpp_find_all_descendents/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_cluster.qs";
  qs::c_qsave(cluster,cluster_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "cluster values: "<< cluster << std::endl;
  IntegerVector i(1);
  i[0]  = RcppDeepState_int();
  std::string i_t = "/home/akhila/fuzzer_packages/fuzzedpackages/o2geosocial/inst/testfiles/cpp_find_all_descendents/libFuzzer_cpp_find_all_descendents/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_i.qs";
  qs::c_qsave(i,i_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "i values: "<< i << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cpp_find_all_descendents(alpha,t_inf,cluster,i[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
