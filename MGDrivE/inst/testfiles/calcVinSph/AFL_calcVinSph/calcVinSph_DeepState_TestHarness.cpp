// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// calcVinSph_DeepState_TestHarness_generation.cpp and calcVinSph_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericMatrix calcVinSph(const Rcpp::NumericMatrix& latLongs, const double& r);

TEST(,){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix latLongs  = RcppDeepState_NumericMatrix();
  std::string latLongs_t = "/home/akhila/fuzzer_packages/fuzzedpackages/MGDrivE/inst/testfiles/calcVinSph/AFL_calcVinSph/afl_inputs/" + std::to_string(t) + "_latLongs.qs";
  qs::c_qsave(latLongs,latLongs_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "latLongs values: "<< latLongs << std::endl;
  NumericVector r(1);
  r[0]  = RcppDeepState_double();
  std::string r_t = "/home/akhila/fuzzer_packages/fuzzedpackages/MGDrivE/inst/testfiles/calcVinSph/AFL_calcVinSph/afl_inputs/" + std::to_string(t) + "_r.qs";
  qs::c_qsave(r,r_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "r values: "<< r << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    calcVinSph(latLongs,r[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
