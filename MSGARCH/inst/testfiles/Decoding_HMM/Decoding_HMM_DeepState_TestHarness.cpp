// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// Decoding_HMM_DeepState_TestHarness_generation.cpp and Decoding_HMM_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List Decoding_HMM(const arma::mat& allprobs, const arma::mat& mGamma, const int& T, const int& K);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  std::ofstream allprobs_stream;
  arma::mat allprobs  = RcppDeepState_mat();
  allprobs_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/MSGARCH/inst/testfiles/Decoding_HMM/inputs/allprobs");
  allprobs_stream << allprobs;
  std::cout << "allprobs values: "<< allprobs << std::endl;
  allprobs_stream.close();
  std::ofstream mGamma_stream;
  arma::mat mGamma  = RcppDeepState_mat();
  mGamma_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/MSGARCH/inst/testfiles/Decoding_HMM/inputs/mGamma");
  mGamma_stream << mGamma;
  std::cout << "mGamma values: "<< mGamma << std::endl;
  mGamma_stream.close();
  IntegerVector T(1);
  T[0]  = RcppDeepState_int();
  qs::c_qsave(T,"/home/akhila/fuzzer_packages/fuzzedpackages/MSGARCH/inst/testfiles/Decoding_HMM/inputs/T.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "T values: "<< T << std::endl;
  IntegerVector K(1);
  K[0]  = RcppDeepState_int();
  qs::c_qsave(K,"/home/akhila/fuzzer_packages/fuzzedpackages/MSGARCH/inst/testfiles/Decoding_HMM/inputs/K.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "K values: "<< K << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    Decoding_HMM(allprobs,mGamma,T[0],K[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
