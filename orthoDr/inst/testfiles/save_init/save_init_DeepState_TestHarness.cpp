// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// save_init_DeepState_TestHarness_generation.cpp and save_init_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double save_init(const arma::mat& B, const arma::mat& X, const arma::mat& Y, double bw, int ncore);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  std::ofstream B_stream;
  arma::mat B  = RcppDeepState_mat();
  B_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/orthoDr/inst/testfiles/save_init/inputs/B");
  B_stream << B;
  std::cout << "B values: "<< B << std::endl;
  B_stream.close();
  std::ofstream X_stream;
  arma::mat X  = RcppDeepState_mat();
  X_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/orthoDr/inst/testfiles/save_init/inputs/X");
  X_stream << X;
  std::cout << "X values: "<< X << std::endl;
  X_stream.close();
  std::ofstream Y_stream;
  arma::mat Y  = RcppDeepState_mat();
  Y_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/orthoDr/inst/testfiles/save_init/inputs/Y");
  Y_stream << Y;
  std::cout << "Y values: "<< Y << std::endl;
  Y_stream.close();
  NumericVector bw(1);
  bw[0]  = RcppDeepState_double();
  qs::c_qsave(bw,"/home/akhila/fuzzer_packages/fuzzedpackages/orthoDr/inst/testfiles/save_init/inputs/bw.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "bw values: "<< bw << std::endl;
  IntegerVector ncore(1);
  ncore[0]  = RcppDeepState_int();
  qs::c_qsave(ncore,"/home/akhila/fuzzer_packages/fuzzedpackages/orthoDr/inst/testfiles/save_init/inputs/ncore.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ncore values: "<< ncore << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    save_init(B,X,Y,bw[0],ncore[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
