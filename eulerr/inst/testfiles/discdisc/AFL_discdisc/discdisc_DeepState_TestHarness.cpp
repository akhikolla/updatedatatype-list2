// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// discdisc_DeepState_TestHarness_generation.cpp and discdisc_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double discdisc(double d, double r1, double r2, double overlap);

TEST(,){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector d(1);
  d[0]  = RcppDeepState_double();
  std::string d_t = "/home/akhila/fuzzer_packages/fuzzedpackages/eulerr/inst/testfiles/discdisc/AFL_discdisc/afl_inputs/" + std::to_string(t) + "_d.qs";
  qs::c_qsave(d,d_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "d values: "<< d << std::endl;
  NumericVector r1(1);
  r1[0]  = RcppDeepState_double();
  std::string r1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/eulerr/inst/testfiles/discdisc/AFL_discdisc/afl_inputs/" + std::to_string(t) + "_r1.qs";
  qs::c_qsave(r1,r1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "r1 values: "<< r1 << std::endl;
  NumericVector r2(1);
  r2[0]  = RcppDeepState_double();
  std::string r2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/eulerr/inst/testfiles/discdisc/AFL_discdisc/afl_inputs/" + std::to_string(t) + "_r2.qs";
  qs::c_qsave(r2,r2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "r2 values: "<< r2 << std::endl;
  NumericVector overlap(1);
  overlap[0]  = RcppDeepState_double();
  std::string overlap_t = "/home/akhila/fuzzer_packages/fuzzedpackages/eulerr/inst/testfiles/discdisc/AFL_discdisc/afl_inputs/" + std::to_string(t) + "_overlap.qs";
  qs::c_qsave(overlap,overlap_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "overlap values: "<< overlap << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    discdisc(d[0],r1[0],r2[0],overlap[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
