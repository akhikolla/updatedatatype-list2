// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// calcVinEll_DeepState_TestHarness_generation.cpp and calcVinEll_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericMatrix calcVinEll(const Rcpp::NumericMatrix& latLongs, const double& a, const double& b, const double& f, const double& eps, const double& iter);

TEST(,){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix latLongs  = RcppDeepState_NumericMatrix();
  std::string latLongs_t = "/home/akhila/fuzzer_packages/fuzzedpackages/MGDrivE/inst/testfiles/calcVinEll/AFL_calcVinEll/afl_inputs/" + std::to_string(t) + "_latLongs.qs";
  qs::c_qsave(latLongs,latLongs_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "latLongs values: "<< latLongs << std::endl;
  NumericVector a(1);
  a[0]  = RcppDeepState_double();
  std::string a_t = "/home/akhila/fuzzer_packages/fuzzedpackages/MGDrivE/inst/testfiles/calcVinEll/AFL_calcVinEll/afl_inputs/" + std::to_string(t) + "_a.qs";
  qs::c_qsave(a,a_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "a values: "<< a << std::endl;
  NumericVector b(1);
  b[0]  = RcppDeepState_double();
  std::string b_t = "/home/akhila/fuzzer_packages/fuzzedpackages/MGDrivE/inst/testfiles/calcVinEll/AFL_calcVinEll/afl_inputs/" + std::to_string(t) + "_b.qs";
  qs::c_qsave(b,b_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "b values: "<< b << std::endl;
  NumericVector f(1);
  f[0]  = RcppDeepState_double();
  std::string f_t = "/home/akhila/fuzzer_packages/fuzzedpackages/MGDrivE/inst/testfiles/calcVinEll/AFL_calcVinEll/afl_inputs/" + std::to_string(t) + "_f.qs";
  qs::c_qsave(f,f_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "f values: "<< f << std::endl;
  NumericVector eps(1);
  eps[0]  = RcppDeepState_double();
  std::string eps_t = "/home/akhila/fuzzer_packages/fuzzedpackages/MGDrivE/inst/testfiles/calcVinEll/AFL_calcVinEll/afl_inputs/" + std::to_string(t) + "_eps.qs";
  qs::c_qsave(eps,eps_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "eps values: "<< eps << std::endl;
  NumericVector iter(1);
  iter[0]  = RcppDeepState_double();
  std::string iter_t = "/home/akhila/fuzzer_packages/fuzzedpackages/MGDrivE/inst/testfiles/calcVinEll/AFL_calcVinEll/afl_inputs/" + std::to_string(t) + "_iter.qs";
  qs::c_qsave(iter,iter_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "iter values: "<< iter << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    calcVinEll(latLongs,a[0],b[0],f[0],eps[0],iter[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
