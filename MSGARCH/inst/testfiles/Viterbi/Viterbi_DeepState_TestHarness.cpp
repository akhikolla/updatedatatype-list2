// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// Viterbi_DeepState_TestHarness_generation.cpp and Viterbi_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

arma::vec Viterbi(const arma::mat& mLLK, const arma::mat& mGamma, const int& iK);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  std::ofstream mLLK_stream;
  arma::mat mLLK  = RcppDeepState_mat();
  mLLK_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/MSGARCH/inst/testfiles/Viterbi/inputs/mLLK");
  mLLK_stream << mLLK;
  std::cout << "mLLK values: "<< mLLK << std::endl;
  mLLK_stream.close();
  std::ofstream mGamma_stream;
  arma::mat mGamma  = RcppDeepState_mat();
  mGamma_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/MSGARCH/inst/testfiles/Viterbi/inputs/mGamma");
  mGamma_stream << mGamma;
  std::cout << "mGamma values: "<< mGamma << std::endl;
  mGamma_stream.close();
  IntegerVector iK(1);
  iK[0]  = RcppDeepState_int();
  qs::c_qsave(iK,"/home/akhila/fuzzer_packages/fuzzedpackages/MSGARCH/inst/testfiles/Viterbi/inputs/iK.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "iK values: "<< iK << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    Viterbi(mLLK,mGamma,iK[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
